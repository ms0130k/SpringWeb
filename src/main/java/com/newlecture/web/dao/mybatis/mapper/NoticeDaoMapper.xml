<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newlecture.web.dao.NoticeDao">
    <select id="getViewList" resultType="com.newlecture.web.entity.NoticeView">
        SELECT *
        FROM notice_view
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="query != null and query != ''">
                AND ${field} LIKE '%${query}%'
            </if>
            AND pub = #{pub}
        </trim>
        ORDER BY regdate DESC
        LIMIT #{size} OFFSET #{offset}
    </select>
    
    <select id="getCount">
        SELECT count(id) count
        FROM notice
        WHERE ${field} LIKE '%${query}%'
    </select>
    
    <select id="getView" resultType="com.newlecture.web.entity.NoticeView">
        SELECT *
        FROM notice_view
        WHERE id = #{id}
    </select>
    
    <select id="getNext" resultType="com.newlecture.web.entity.Notice">
        SELECT *
        FROM notice
        WHERE id = (SELECT min(id) FROM notice WHERE id &gt; #{id})
    </select>
    
    <select id="getPrev" resultType="com.newlecture.web.entity.Notice">
        SELECT *
        FROM notice
        WHERE id = (SELECT max(id) FROM notice WHERE id &lt; #{id})
    </select>
    
    <insert id="insert" parameterType="com.newlecture.web.entity.Notice">
        INISERT INTO Notice (
            title,
            content,
            member_id
        ) VALUES (
            #{title},
            #{content},
            #{memberId}
        )
    </insert>
    
    <delete id="delete">
        DELETE FROM notice WHERE id = #{id}
    </delete>
    
    <delete id="deleteAll">
        DELETE FROM notice
        <where>
            <foreach item="item" collection="ids" open="id IN (" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </delete>
    
    <update id="updatePubAll">
        SET
            pub = #{pub}
        WHERE id IN
        <foreach item="id" collection="ids" open="(" close=")">
            #{id}
        </foreach>
        <!-- UPDATE notice
        SET
            pub = CASE id
                <foreach item="id" collection="pubIds">
                    WHEN #{id} then 1
                </foreach>
                <foreach item="id" collection="closeIds">
                    WHEN #{id} then 0
                </foreach>
                END
        WHERE
            id IN (
            <foreach item="id" collection="pubIds" separator=",">
                #{id}
            </foreach>
            ,
            <foreach item="id" collection="pubIds" separator=",">
                #{id}
            </foreach>
            ) -->
    </update>
</mapper>